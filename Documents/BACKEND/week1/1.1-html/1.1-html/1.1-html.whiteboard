[deck]
readonly = true
cssfile = ../basestyle.css

[slide]
title=Kickstart Backend - 1.1 - HTML

[slide]
title=Introducing: The Kickstart Coding Team
markdown : '''
* Michael Bethencourt - Lead Instructor
* Maddy Ford - Teaching Assistant
* Mark Stewart - Associate Instructor
'''


[slide]
title=Introducing: You!


[slide]
title=Introducing: You!
markdown : '''
1. Name
2. Why you are taking this course?
3. Favorite Pokemon (OR other fictional character)
'''

[slide]
title=Today's class
markdown : '''
* Introductions ‚Üê
* What is coding
* Activity Time: Two horses and a unicorn
* The Kickstart Backend curriculum
* Learning strategies
* Hello World, published on GitHub
* HTML crash course
* Publishing your first template-driven site
'''

[slide]
title=Learning caps on, hang on tight, your wild ride is about to begin


[slide]
title=What is "computer programming"?
markdown : '''
Computer programming is speaking the languages that computers speak.  It
involves writing files (called programming "code"). These files give the
computer instructions on how to create websites from scratch and add new
functionality.

### Key terms

* **programming language**: A special type of very literal, precise "language"
  that gives instructions to computers

* **code**: A type of file written in a programming language. Composing these
  files is called *coding*

* **front end**: The graphic design and user interface of a web
  app

* **back end**: The logic and data manipulation of a web app

* **stack** or **tech stack**: The set of programming languages and tools
  (colloquially referred to as "tech") used at a particular company

* **full stack**: Working with both the front-end and back-end of a tech stack
'''


[slide]
title=Who's stoked?
markdown : '''
## Respond on chat with an emoji! üôåüí™ üíØ

## Not logged on..? Log on now!
'''


[slide]
title=ACTIVITY TIME
markdown = ![Adventure time](file://./images/adventure_time.png)


[slide]
title="Two Horses and a Unicorn"
markdown : '''

> ![Adventure time](file://./images/adventure_time_2.png)

1. Split into 2 or 3 person groups (yes that might mean standing up ughhhh)

2. Go to one (or both) of the following:
    * The most recent "Who's hiring" thread on Hacker News
    * StackShare

3. Pick two companies and take note of some their "tech stack"

4. Here's the fun part: Make up a 3rd company (the unicorn) and pick (or make
up) some technologies for them to use

5. When you're done, post your results, INCLUDING the made up one to Slack

6. Vote on other people's by reacting with either horse emoji (real company) or
unicorn emoji (made up company)


'''

[slide]
title=Kickstart Coding Full Stack Curriculum


[slide]
title=Kickstart Coding Full Stack Curriculum
markdown : '''

Now that you've learned 1) what we mean by "stack" and "full stack", and 2)
what's out there, we can dive into an overview of the curriculum

'''


#[slide]
#title=DISRUPTION
#markdown : '''
#* Question: Anyone know what "disruption" is?
#'''
#
#[slide]
#title=DISRUPTION
#markdown : '''
#* Question: Anyone know what "disruption" is?
#
#* Answer ("correct" answer): Changing and innovating an industry
#
#* Answer (lets be honest): A kinda meaningless Silicon Valley buzzword
#'''
#
#[slide]
#title=DISRUPTION
#markdown : '''
#* Question: Anyone know what "disruption" is?
#
#* Answer ("correct" answer): Changing and innovating an industry
#
#* Answer (lets be honest): A kinda meaningless Silicon Valley buzzword
#
#* *But, pretending for a moment its not just a silly buzzword... that's what
#  we're doing here!*
#'''

[slide]
title=Kickstart Coding Difference: What to Expect

[slide]
title=Inclusive
markdown : '''
* Many bootcamps require you to already be a coder - we've designed the course
  to "kickstart" coders and noobs alike (we even provide the computer)

* Many bootcamps require full time dedication - we're part-time so you can have
  a job too

* The biggie: Most bootcamps cost 12-25k - we calculated the costs and realized
  we can provide the same experience for a less (a LOT less)
'''

[slide]
title=Solid curriculum
markdown : '''
* We cut out and compress all the "legacy" stuff

* We carefully picked tech that's sky-rocketing in popularity
'''

[slide]
title=Why we chose the tech

[slide]
title=Rails is losing ground
markdown : '''
![Rails decline](file://./images/rails-decline.png)

David Robinson's analysis of webstack popularity (Stack Overflow blog)
'''

[slide]
title=Python is sky-rocketing
markdown : '''
![Languages](file://./images/projections.png)

David Robinson's analysis of programming language popularity (Stack Overflow
blog)
'''

[slide]
title=IEEE Top Programming Languages of 2017
markdown : '''
![Languages](file://./images/ieee2017.png)
'''

[slide]
title=Job postings
markdown : '''
* We all did some research during Prework

* Our Super Duper Official Data Science Methodology‚Ñ¢: Ctrl+F "Find" in Who's
  Hiring on Hacker News

![Job postings](file://./images/python_search.png)
'''

[slide]
title=Job postings (March 2018)
markdown : '''

* **Guess which one of these is nearly universally taught at web schools?**

| Our courses   |               |
| ------------- |--------------:|
| React         | **333**       |
| Python        | **273**       |
| JavaScript    | **174**       |
| Postgres      | 132           |
| Django        | 93            |

| Other *       |               |
| ------------- |--------------:|
| Node.js       | 164           |
| Rails         | 121           |
| Express       | 10            |
| jQuery        | 10            |
| Firebase      | 4             |


* `*` Note: These are just a handful of popular techs taught at different
  schools
'''

# | Ruby          | 127           |

[slide]
title=Answer: jQuery
markdown : '''

* More popular techs (Ruby, Python, React.js) only get 3-5 pages of results

* For databases, Postgres is the most cutting-edge, yet most schools teach
  in its place either Firebase, MongoDB, or MySQL

![jQuery in bootcamps](file://./images/jquery_bootcamp.png)
'''

[slide]
title=But all this doesn't matter

[slide]
title=But all this doesn't matter
markdown : '''
* Foundational knowledge is more important than buzzwords or trends

* Many (including us) believe that **Python is the best language** out there
  right now for building **a solid foundational understanding**

* It's just a happy coincidence Python is also blowing up

* Many courses teach JavaScript as the first language -- while its an essential
  language to learn in general, it can be a frustrating first language
'''

[slide]
title=Why am I telling you all this?

[slide]
title=To badmouth the competition, natch
markdown=![Comic book guy meme](file://./images/comicbookguy-meme.jpg)

[slide]
title=JUST KIDDING

[slide]
title=All those bootcamps are great
markdown : '''
* You can have a **great** experience at any of these Bootcamps, learn
  valuable skills, and change your career (so many have)

* Coding courses aren't a one-size-fits all

* We just believe that we've identified ways to make a **great** approach even
  **better**

* So... get stoked, you'll be learning only the good stuff!
'''


[slide]
title=Curriculum


[slide]
title=Curriculum
markdown : '''
* Kickstart Backend - Python & Django (8 weeks)
* Kickstart Frontend - JavaScript & React (8 weeks)
'''




[slide]
title=Schedule
markdown : '''
* Monday
    * Class time: 6:30-9:30
    * Study lounge: 6:00-6:30 & 9:30-10:00
* Wednesday
    * Class time: 6:30-9:30
    * Study lounge: 6:00-6:30 & 9:30-10:00
* Saturday:
    * Class time: 1:00-4:00
    * Study lounge: 4:00-5:00
* Review Session
    * Day & Time TBD
'''

[slide]
title=Schedule
markdown : '''
* Lectures
    * Mixture of instruction and guided activities
    * All lectures are recorded so you can re-watch them to review concepts
    * Please try to attend all classes in person
* Review Sessions
    * Kind of like "group tutoring sessions" with instructor and/or TA to
      help you get the hard stuff
* Chat (Mattermost)
    * Chat with each other and form study groups!!!
    * We'll get back to you within 12-24 hours to help you out (might take
      longer on weekends)
'''


[slide]
title=Questions?

[slide]
title=Today's class
markdown : '''
* Introductions
* What is coding
* Activity Time: Two horses and a unicorn
* The Kickstart Coding curriculum
* Learning strategies ‚Üê
* Hello World, published on GitHub
* HTML crash course
* Publishing your first template-driven site
'''


[slide]
markdown : '''
# You've made the first step, you're here.

# You are about to embark on a journey of a lifetime. No joke.
'''


[slide]
title = It's gonna be a helluva journey
markdown = ![Climbing](file://./images/climbing.gif)

[slide]
title = We have other intuitions
markdown = ![Calvinball](file://./images/calvinball.png)

[slide]
title = But not for coding
markdown = ![Hackers](file://./images/hackers-coding.gif)

[slide]
title = Example
markdown : '''
* Many after-school programs for kids use Scratch to teach CS concepts

* CS-202: Introduction to Computing (a course taught in the UW-Madison CS)
  department also uses Scratch

* There is nothing intuitive about coding or CS... no matter your age or
  experience, **you will have to build the intuition from square one**

![Kids learning scratch](file://./images/mit-scratch-day-kids-2017.png)
'''



[slide]
title = Takeaway
markdown : '''
# No matter what other knowledge you have...

### ...if you haven't done much coding before, assume you *know nothing*!
'''


[slide]
title = You know nothing
markdown = ![You know nothing](file://./images/snow-memes-banner.jpg)


[slide]
title = So don't get frustrated


[slide]
title = So don't get frustrated
markdown : '''
* We expect this journey to be hard

* Pro Tips:
    * Do ALL the activities during class
    * Do ALL the assignments
    * Study outside of class
    * Read ahead the recommended online text-book reading

* If/when you need more help:
    * Come to study lounge
    * Ask other students
    * Ask us on Mattermost
'''

[slide]
title = So don't get frustrated
markdown : '''
* During lectures
    * Take notes
    * Keep "scraps" file or directory of useful code snippets

* Best study methods
    1. Code EVERY DAY
    2. Code EVERY DAY
    3. Code EVERY DAY

* **We really, really want EVERYONE in this course to succeed!**
'''


[slide]
title=We just really, freaking love teaching and helping students

[slide]
title=Like really

[slide]
title=Really really

[slide]
title = Also, remember...
markdown : '''
* Coding is so hard, it's also in high demand

* This doesn't mean a career change will be easy, but **if you hustle like
  crazy, it's possible to land a super solid job with our help**

![Silicon valley](file://./images/siliconvalley.jpeg)
'''


[slide]
title=Questions?


[slide]
title=Today's class
markdown : '''
* Introductions
* What is coding
* Activity Time: Two horses and a unicorn
* The Kickstart Coding curriculum
* Learning strategies
* Hello World ‚Üê
* GitHub
* HTML crash course
* Publishing your first template-driven site
'''


[slide]
title=ACTIVITY 2: Hello World!

[slide]
title=ACTIVITY 2: Hello world
markdown : '''
1. Open your text editor (e.g. linux users: Text Editor; macOS users: VSCode or Sublime)
2. Save to `hello_world.html`
3. Type in the code "Hello world"
4. Open up in your web browser
5. BONUS: Try the following code:

```
<h1>Hello (bigger) world!</h1>
```
'''


[slide]
title=Question: Can you see each other's pages?

[slide]
title=Question: Can you see each other's pages?
markdown: '''
### Answer: Nope.

* We still need to publish the HTML page with a server

### Key terms

* **HTML**: A programming language for creating documents that form the content
  of the web

* **web server**: A computer or service that offers up for download "HTML"
  documents to the internet when it is visited at a web address. HTML
  documents, are downloaded and then immediately shown by the web browser.
'''


[slide]
title=Introducing: GitHub

[slide]
title=Introducing: GitHub
markdown : '''
* Git is a free community-run tool that programmers use for collaboration --
  we'll learn this next week
* GitHub is a for-profit company that provides Git-related services, along with
  a few other handy features for software project teams
* Today we will use GitHub for one such feature: They also offer free web
  server hosting, with a few limitations

![Adventure time](file://./images/github-social-coding.jpg)
'''


[slide]
title=ACTIVITY 3: Published Hello World!

[slide]
title=ACTIVITY 3: Published Hello World!
markdown : '''
1. Log on to GitHub & create a new repository (include README.md file).
2. Create a new file `index.html` & type in "Hello world!"
4. Go to repo settings
5. Configure to be "published". Click the link.
6. Get creative:
    * `<h1>Biggest text</h1>`
    * `<h2>Big text</h2> etc to h6`
    * `<p>Paragraph</p>`
    * `<strong>Bold text</strong>`
    * `<em>Italic text</em>`
    * `<a href="http://google.com/">A link to Google</a>`
    * `<img src="https://i.imgur.com/zO9NFOT.jpg" /> An image`
'''


[slide]
title=Today's class
markdown : '''
* Introductions
* What is coding
* Activity Time: Two horses and a unicorn
* The Kickstart Coding curriculum
* Learning strategies
* Hello World
* GitHub
* HTML crash course ‚Üê
* Publishing your first template-driven site
'''

[slide]
title=Buckle-in... time for a fast-paced HTML crash course!

[slide]
title=DEMO: Peeling back the web
markdown : '''
To follow along:
1. Go to any website, such as Hacker News
2. Right-click and select "View source"
3. Using Control+F (or Command+F on macOS), see if you can find the parts of
the page code that created different parts of the visual site
'''


[slide]
title=Anatomy of the p-tag
markdown : '''
![Tag diagram](file://./images/anatomy_of_tag.svg)
'''

[slide]
title=Anatomy of the p-tag
markdown : '''
`<a href="http://google.com/">Check out this site</a>`

`<a>` -- ("opening tag")

`href="http://google.com/"` -- ("tag attribute")

> ![Tag diagram](file://./images/anatomy_of_tag.svg)

### Key terms

* **HTML**: The language that powers the *content* of the web

* **tag**: One portion of HTML, also called an "element"

* **opening tag**: The beginning of a tag, looks like `<p>`

* **contents**: What goes inside the tag

* **closing tag**: The beginning of a tag, looks like `</p>`
'''


[slide]
title=DEMO: Anatomy of the p-tag
editor=activities/tag_examples.html
browser=activities/tag_examples.html
markdown : '''

![Tag diagram](file://./images/anatomy_of_tag.svg)

### Key terms

* **opening tag**: The beginning of a tag, looks like `<p>`

* **contents**: What goes inside the tag

* **closing tag**: The beginning of a tag, looks like `</p>`
'''




[slide]
title=Anatomy of the a-tag and img-tag
markdown : '''

`<a href="http://google.com/">Check out this site</a>`

`<a>` -- ("opening tag")

`href="http://google.com/"` -- ("tag attribute")


### Key terms

* **URL**: URL and URI are fancy acronyms to refer to web addresses

* **tag attribute**: Provides extra behavior for a tag, resides in the opening
  tag in the form of `name="value"`

* **self closing tag**: Tags that require no content. Notable
  examples: the `img` (image) tag, the `br` (break) tag
'''


[slide]
title=Anatomy of the a-tag and img-tag
editor=activities/img_tag_examples.html
browser=activities/img_tag_examples.html
markdown : '''

### Key terms

* **URL**: URL and URI are fancy acronyms to refer to web addresses

* **tag attribute**: Provides extra behavior for a tag, resides in the opening
  tag in the form of `name="value"`

* **self closing tag**: Tags that require no content. Notable
  example: the `img` (image) tag
'''


[slide]
title=Tagception

[slide]
title=Tagception
markdown : '''

Important concept: Tags can be combined, and put within each other. Just always
remember to match up a closing tag with every opening tag, otherwise you'll
have a bad time.

Practice using the following example code in your own sites:

```
<p>Hello world!</p>
<p><a href="http://google.com/">Check out this site</a></p>
<p><img src="http://i.imgur.com/zw4yhxv.jpg" /></p>
```
'''


[slide]
title=Oh the tags you'll see
markdown : '''

Hang on tight, there are hundreds of tags.

We'll go over the most popular.

![the tags you'll see](file://./images/drseuss.gif)
'''


[slide]
title=H1-H6
markdown : '''

H1-H6 are various sizes of section headers

H1 is great for the top header of your site

```
<h1>Biggest</h1>
<h2>Bigger</h2>
<h3>Big</h3>
<h4>Small</h4>
<h5>Smaller</h5>
<h6>Smallers</h6>
```
'''


[slide]
title=Strong, em, and br

markdown : '''

Strong and em provide some bold and italic

```
<p> <strong>This</strong> code is <em>stylish</em>! </p>
```

`<br />` is a "line break" and forces a new line to start

```
<p>My poem<br /> is poetic</p>
```

HR is a horizontal rule (e.g. horizontal line)

```
<p>Above the fold</p>
<hr />
<p>Below the fold</p>
```
'''


[slide]
title=table
markdown : '''

* Table creation is done via a bit more advanced set of tags

* Useful for displaying spreadsheet-like charts

* For displaying tabular data, there are a host of tags to use

* `<table>` for the outside of the entire table
* `<thead>` for header
* `<tr>` for rows in either the body or header
* `<th>` for individual column headers
* `<tbody>` for the body of the table
* `<td>` for individual cells of data

```
<table>
    <thead> <tr> <th>Name</th> <th>Type</th> <th>Number</th> </tr> </thead>
    <tbody>
        <tr> <td>Pikachu</td> <td>Electric</td> <td>25</td> </tr>
        <tr> <td>Jigglypuff</td> <td>Normal</td> <td>39</td> </tr>
    </tbody>
</table>
```
'''


[slide]
title = ACTIVITY: Unicorn mode
editor = activities/more_tag_examples.html
browser = activities/more_tag_examples.html
markdown : '''
### Start building the site for your unicorn start-up!

Use these examples as  reference. Use at least one of the following
tag types:

* header
* link
* image
* styling (bold or italic)
* table (tricky!)
'''

[slide]
title=Boilerplate & Comments
markdown : '''

### KEY TERMS
* **Boilerplate:** stuff that you kinda have to copy and paste into all new
  projects
* **Comment:** text in programming code that is ignored, and used only as a
  reminder or "comment" on the code itself, that is to say, a message to people
  reading it, or to temporarily disable code

'''


[slide]
title=Comments
editor = activities/comment_examples.html
browser = activities/comment_examples.html
markdown : '''
**Comment:** text in programming code that is ignored

Two uses of comments:

1. Reminder to humans reading the code

2. Disabling code while figuring out bugs

`<!--` and `-->` is useful for comments
'''


[slide]
title=Boilerplate
editor = activities/boilerplate.html
browser = activities/boilerplate.html
markdown : '''
* **Boilerplate:** stuff that you kinda have to copy and paste into all new
  projects

* Don't worry too much about all the stuff that can go in here, for
  now just copy & paste it as needed, and use the `<title>` to change
  the page title (shows up in tab)
'''

[slide]
title=Launch the Unicorn ü¶Ñ

[slide]
title=ACTIVITY: Launch the Unicorn ü¶Ñ
markdown : '''
1. Go to Start Bootstrap, Bootstrap Made, Templates.co or a similar theme
site

2. Find a nice looking theme, download the zip, unzip it

3. Open up the HTML file in a text editor and browser

4. Using Control+F (or Command+F on macOS), see if you can find the
parts of the code that correspond to parts of the page

5. Experiment with changing stuff... make a web page for your
unicorn!

6. When you are done, share a screenshot in chat (use PrintScreen, or
Shift+Command+4 on macOS)

* NOTE: If you want to publish it on GitHub, it's a bit harder (although
  possible) since there are often many files that came with it which need to be
  individually added. Next week we'll learn how to add lots of stuff at once.
'''

[slide]
title=Questions?

