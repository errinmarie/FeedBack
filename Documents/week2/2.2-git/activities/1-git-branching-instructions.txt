1. Either go back to the git repo you did from the git challenge on
Monday, OR start a new one (use instructions from
2.1-bash/activities/4-git-challenge-instructions.txt)

2. Use "git branch my-test-branch" to create a new branch called
"my-test-branch"

2. Use "git status" to double check you are on "master" branch

3. Use "git checkout my-test-branch" to switch to your newly created
branch

4. Use "git status" to confirm you are on your newly created branch

5. Use your text editor to edit & save the index.html file -- for
example, add another line of text.

6. Use "git add -A" and "git commit", as before, to create a commit with
the change you did (this is to "freeze" the change in time)

7. Use "git log" to see the history of changes you've made on this
branch

8. Now, lets say we want to merge this branch into master, so that
master will have this change too. Use "git checkout master" to switch
back to master branch.

9. Use "git merge my-test-branch" to merge the test branch into master

10. Use "git log" to ensure that it brought over that extra commit you
just made

11. Repeat steps 3-10 to do another merge.

BONUS CHALLENGE 1:

Simulate & resolve a merge conflict. This can be done by editing the
index.html file and creating a new commit on master, also, before you
merge the branch back.

BONUS CHALLENGE 2:

Repeat these steps, except do a two step merge, from "my-new-branch-2"
to "my-new-branch" to master.

