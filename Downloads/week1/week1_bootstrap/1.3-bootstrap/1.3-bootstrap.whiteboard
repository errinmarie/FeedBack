[deck]
readonly = true
cssfile = ../basestyle.css

[slide]
title=Kickstart Coding - 1.3 - Bootstrap

[slide]
title = Remember, we'll keep on climbing
markdown = ![Climbing](file://./images/climbing.gif)

[slide]
title = So don't get frustrated
markdown : '''
* We expect this journey to be hard

* Protips
    * Do ALL the activities during class
    * Do ALL the assignments
    * Study outside of class
    * Read ahead the recommended online text-book reading

* If/when you need more help:
    * Come to study lounge
    * Ask other students
    * Ask us on Chat
'''

[slide]
title=CSS Review


[slide]
title=CSS Rules
markdown=![CSS Block](file://./images/css_block.png)


[slide]
title=CSS Selectors
markdown : '''
| Selector      | Matching HTML example |
| ------------- |--------------:|
| `p`           | `<p>Test</p>` |
| `.cls-name`   | `<p class="cls-name">Test</p>` |
| `#id_name`    | `<p id="id_name">Test</p>` |

### KEY TERMS
* **class** - a way to group HTML elements
* **id** - like class, but unique: a way to "name" a singular element
'''


[slide]
title=CSS Selectors - Combining
markdown : '''
| Selector      | Matching HTML example |
| ------------- |--------------:|
| `p.cls`       | `<p class="cls">Test</p>` |
| `.cls1, .cls2`| `<p class="cls1">a</p>` `<p class="cls2">b</p>`  |
| `.cls em`     | `<p class="cls"><em>Test</em></p>` |

* Comma-separate multiple selectors

* Add a space to select "child" or elements within other elements

* Combine selectors by putting next to each other (e.g. `p.class-name`)
'''



[slide]
title=ACTIVITY 1: Review Activity!
editor=activities/1-review.html
browser=solutions/1-review.html
markdown : '''
* Fill in the `<style>` tag to add style to the page

* Pay attention to the hints in the HTML file

![CSS Block](file://./images/css_block.png)
'''


[slide]
title=DEMO: Positioning
editor=examples/positioning.html
browser=examples/positioning.html


[slide]
title=As you noticed, I am the best at design
browser=solutions/1-review.html

[slide]
title=How do we make nice looking styles with CSS?

[slide]
title=How do we make nice looking styles with CSS?
markdown : '''
* Option 1: Lots of time and effort and hard work

![CSS Block](file://./images/working-hard.gif)
'''

[slide]
title=How do we make nice looking styles with CSS?
markdown : '''
* Option 2: We cheat, and use a lot of pre-made CSS

![CSS Block](file://./images/simpsons_working.gif)
'''

[slide]
title=Bootstrap


[slide]
title=Bootstrap
markdown : '''
> ![Bootstrap Stack](file://./images/bootstrap-stack.png)

* Bootstrap is an open source library developed by Twitter to allow rapid
  prototyping of websites by providing a set of useful and highly optimized CSS
  classes

* It's attractive, consistent, and responsive

* It's very popular

* An easy way to include Bootstrap is by using a CDN

### KEY TERMS:
* **library** - code that someone else wrote that you can use
* **free software / open source** - code that guarantees your rights as a user
  & developer to use and modify it free of restrictions
* **responsive design** - design that works well on mobile and on desktop
* **CDN** - content delivery network, a system of servers to distribute
  content. Free ones exist that we can link right in
'''

[slide]
layout=horizontal
title=DEMO: Bootstrap CDN - Scoobie-dUber Before...
editor=examples/before-cdn.html
browser=examples/before-cdn.html

[slide]
layout=horizontal
title=DEMO: Bootstrap CDN - Scoobie-dUber After!
editor=examples/after-cdn.html
browser=examples/after-cdn.html


[slide]
title=DEMO: Google Fonts CDN
markdown = ![Google Fonts](file://./images/google_fonts.png)

#[slide]
#title=DEMO: Google Fonts CDN
#editor=TODO.html
#browser=TODO.html
#markdown : '''
#Google Fonts is a library for adding custom fonts to your site.
#'''

[slide]
title=ACTIVITY 2: CDN
editor=./activities/2-cdn/index.html
browser=./solutions/2-cdn/index.html

#markdown : '''
#1. Your turn! Open up the HTML file
#
#2. Google for a link for a Bootstrap CDN and copy it
#
#3. Add it into the HTML using a `<link />` tag in the `<head>`. If you did it
#correctly, the page should "magically" come to life.
#
#4. There are still some issues though: Add a link for the CSS file you find in the
#
#5. Now, go to Google Fonts and get the CDN URL for the fonts CSS for `Pacifico`
#
#6. Repeat 3, but for this new CDN URL. If you did it correctly, the page should
#get new fonts
#
#7. Bonus: If you have time after this, see if you can find and include a new
#font and change the page's CSS to use it
#'''


[slide]
title=Bootstrap Grid


[slide]
title=Bootstrap Grid
markdown : '''

* Bootstrap "grid" is the feature of Bootstrap that lets us layout stuff next
  to each other

* It's one of the best features of bootstrap

![bootstarp grid](file://./images/tutorial_republic_grid_system_illustration.jpg)
'''

#[slide]
#title=Bootstrap Grid
#markdown : '''
#
##### KEY TERMS
#* grid - the way we lay stuff out using bootstrap, dividing the page into
#  columns and rows
#* mockup - an image that describes how a website should look eventually
#* wireframe - a type of mockup that intentionally ignores details and is mostly
#  interested in layout and content
#'''

[slide]
title=DEMO: Bootstrap Grid
editor=examples/grid.html
browser=examples/grid.html

[slide]
title=ACTIVITY 3: Shiba grid
browser=solutions/3-bootstrap.html

[slide]
title=How to approach complex layouts
markdown : '''

* HINT: Rows and columns can contain each other, so you can have multiple
  levels of "outer grids" and "inner grids"

#### KEY TERMS
* mockup - an image that describes how a website should look eventually
* wireframe - a type of mockup that intentionally ignores details with simple
  stick-figure like drawings, used to brainstorm layouts and functionality

![CSS Block](file://./images/wireframe.png)
'''


[slide]
title=ACTIVITY 4: Pen & Paper Wireframe
layout=horizontal
markdown : '''

1. Your (very challenging!) goal is to recreate the blog layout you see here!
2. Sketch on paper a "wireframe". Then with a new color, start drawing lines to
break down the wireframe into rows then columns.
Hint: There is only 1 outermost row and 2 outermost columns (but the columns
might contain more rows!)
'''
browser=solutions/4-grid-blog.html


[slide]
title=ACTIVITY 4: Coding blog grid layout
layout=horizontal
markdown : '''

1. Your (very challenging!) goal is to recreate the blog layout you see here!
2. Sketch on paper a "wireframe". Then with a new color, start drawing lines to
break down the wireframe into rows then columns.
3. Finally, start coding with the outer grid and work your way inward
'''
browser=solutions/4-grid-blog.html


[slide]
title=ACTIVITY 4: Solution
editor=solutions/4-grid-blog.html
browser=solutions/4-grid-blog.html

[slide]
title=Bootstrap Components

[slide]
title=Bootstrap Components
markdown : '''
* Bootstrap has a set of pre-made, nice looking components, including buttons,
  modals, etc

> ![Components](file://./images/components.png)

### KEY TERMS
* **component** - re-usable graphical elements for the page
* **navigation** - the links at top
* **jumbotron** - the big welcoming text on a page
* **modal** - those damn pop-ups that keep you from clicking elsewhere

'''

[slide]
title=ACTIVITY 5: Components
browser=https://getbootstrap.com/docs/4.0/components/alerts/

[slide]
title=HW1, Quiz1
markdown : '''
1. Homework is due next week!

2. Short quiz next class, covering HTML, CSS, and Bootstrap

*Hint: Focus your time on HW!*

![Spongebob taking a test](file://./images/testtakingspongebob.gif)
'''

[slide]
title=Questions?

